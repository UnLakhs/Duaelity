IMPORTANT TO COMPLETE BEFORE RELEASE
1. Tournament Features
    -Refetch tournament data when a tournament is created (maybe fixed).
    -Add search, filtering, and sorting to the tournament listing page.
    -Add a way for users to upload an image for their tournament (already integrated with Cloudinary).
    -Figure out what to do with old tournaments (e.g., delete match history but keep player placements unless needed for player match history).

2. User Authentication and Profiles
    -Add failed login attempts and lockout mechanism after too many failed attempts.
    -Make the user profile page (display user info, tournaments created, and tournaments joined).
    -Add a way to reset password (via email).
    -Add a way to change password (in user settings).
    -Send OTP (One-Time Password) to email for registration.

3. UI/UX Improvements
    -Fix spacing issues on tablets (responsive design).
    -Add loading states and error handling for all pages.
    -Polish the UI for tournament creation and listing pages.

4. Admin Features
    -Figure out what admin privileges will do (e.g., delete tournaments, manage users, etc.).

5. Notification System
    -Add a basic notification system (e.g., notify users when they join a tournament, when a tournament starts, etc.).

6. Miscellaneous
    -Add more currency options for tournament creation.



AFTER RELEASE
1. Chat System
    -Add a chat system for users (global chat, tournament-specific chat, and direct messaging).

2. Organizations
    -Allow users to create and join organizations.
    -Add organization profiles and management tools.

3. Gamification
    -Add a leaderboard for top players or organizations.
    -Introduce achievements and rewards for participating in tournaments.

4. Monetization
    -Allow organizers to charge entry fees for tournaments.
    -Add a payment system for prize pools or donations.

5.Advanced Features
    -Integrate with game APIs (e.g., Steam, Riot Games) to fetch player stats or verify results.
    -Add live streaming integration (e.g., Twitch, YouTube).

6. Community Building
    -Set up a Discord server or forum for user feedback and support.
    -Run beta testing with a small group of users to gather feedback.

7. Mobile App
    -Develop a mobile app for iOS and Android using React Native or Flutter.